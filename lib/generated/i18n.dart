import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes
// ignore_for_file: unnecessary_brace_in_string_interps

//WARNING: This file is automatically generated. DO NOT EDIT, all your changes would be lost.

typedef LocaleChangeCallback = void Function(Locale locale);

class I18n implements WidgetsLocalizations {
  const I18n();
  static Locale _locale;
  static bool _shouldReload = false;

  static set locale(Locale newLocale) {
    _shouldReload = true;
    I18n._locale = newLocale;
  }

  static const GeneratedLocalizationsDelegate delegate = GeneratedLocalizationsDelegate();

  /// function to be invoked when changing the language
  static LocaleChangeCallback onLocaleChanged;

  static I18n of(BuildContext context) =>
    Localizations.of<I18n>(context, WidgetsLocalizations);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  /// "Szivacs Napló"
  String get appTitle => "Szivacs Napló";
  /// "verzió"
  String get appVersion => "verzió";
  /// "főoldal"
  String get drawerHome => "főoldal";
  /// "jegyek"
  String get drawerEvaluations => "jegyek";
  /// "órarend"
  String get drawerTimetable => "órarend";
  /// "házi feladatok"
  String get drawerHomeworks => "házi feladatok";
  /// "feljegyzések"
  String get drawerNotes => "feljegyzések";
  /// "üzenetek"
  String get drawerMessages => "üzenetek";
  /// "számonkérések"
  String get drawerTests => "számonkérések";
  /// "hiányzások, késések"
  String get drawerAbsences => "hiányzások, késések";
  /// "beállítások"
  String get drawerSettings => "beállítások";
  /// "Számonkérések"
  String get testTitle => "Számonkérések";
  /// "1-es"
  String get grade1 => "1-es";
  /// "2-es"
  String get grade2 => "2-es";
  /// "3-as"
  String get grade3 => "3-as";
  /// "4-es"
  String get grade4 => "4-es";
  /// "5-ös"
  String get grade5 => "5-ös";
  /// "osztályzat"
  String get grade => "osztályzat";
  /// "fiókok"
  String get accountTitle => "fiókok";
  /// "Felhasználó törlése"
  String get accountDelete => "Felhasználó törlése";
  /// "Biztosan törölni szeretnéd ${name} felhasználót?"
  String accountDeleteConfirm(String name) => "Biztosan törölni szeretnéd ${name} felhasználót?";
  /// "OK"
  String get dialogOk => "OK";
  /// "IGEN"
  String get dialogYes => "IGEN";
  /// "NEM"
  String get dialogNo => "NEM";
  /// "KÉSZ"
  String get dialogDone => "KÉSZ";
  /// "idő"
  String get time => "idő";
  /// "óra"
  String get timeHour => "óra";
  /// "perc"
  String get timeMinute => "perc";
  /// "timeLater"
  String get timeLater => "timeLater";
  /// "dátum"
  String get date => "dátum";
  /// "holnap"
  String get dateTomorrow => "holnap";
  /// "hétfő"
  String get dateMonday => "hétfő";
  /// "kedd"
  String get dateTuesday => "kedd";
  /// "szerda"
  String get dateWednesday => "szerda";
  /// "csütörtök"
  String get dateThursday => "csütörtök";
  /// "péntek"
  String get dateFriday => "péntek";
  /// "szombat"
  String get dateSaturday => "szombat";
  /// "vasárnap"
  String get dateSunday => "vasárnap";
  /// "H"
  String get dateMondayShort => "H";
  /// "K"
  String get dateTuesdayShort => "K";
  /// "Sz"
  String get dateWednesdayShort => "Sz";
  /// "Cs"
  String get dateThursdayShort => "Cs";
  /// "P"
  String get dateFridayShort => "P";
  /// "Sz"
  String get dateSaturdayShort => "Sz";
  /// "V"
  String get dateSundayShort => "V";
  /// "nap"
  String get dateDay => "nap";
  /// "hét"
  String get dateWeek => "hét";
  /// "hónap"
  String get dateMonth => "hónap";
  /// "két hónap"
  String get dateMonth2 => "két hónap";
  /// "előző hét"
  String get dateWeekPrev => "előző hét";
  /// "következö hét"
  String get dateWeekNext => "következö hét";
  /// "késés mértéke"
  String get delayMins => "késés mértéke";
  /// "Összes késés: ${count} perc"
  String delayAll(String count) => "Összes késés: ${count} perc";
  /// "naplózás ideje"
  String get administrationTime => "naplózás ideje";
  /// "állapota"
  String get justificationState => "állapota";
  /// "módja"
  String get justificationMode => "módja";
  /// "óra"
  String get lesson => "óra";
  /// "${count} óra"
  String lessonCount(String count) => "${count} óra";
  /// "következő óra"
  String get lessonNext => "következő óra";
  /// "óra lesz"
  String get lessonHave => "óra lesz";
  /// "terem"
  String get lessonRoom => "terem";
  /// "tanár"
  String get lessonTeacher => "tanár";
  /// "osztály"
  String get lessonClass => "osztály";
  /// "óra kezdete"
  String get lessonStart => "óra kezdete";
  /// "óra vége"
  String get lessonEnd => "óra vége";
  /// "téma"
  String get lessonTheme => "téma";
  /// "tárgy"
  String get lessonSubject => "tárgy";
  /// "házi feladat"
  String get homework => "házi feladat";
  /// "Házi feladatok"
  String get homeworkTitle => "Házi feladatok";
  /// "határidő"
  String get homeworkDeadline => "határidő";
  /// ""
  String get homeworkSubject => "";
  /// ""
  String get homeworkUploadUser => "";
  /// ""
  String get homeworkUploadTime => "";
  /// "helyettesítés"
  String get substitution => "helyettesítés";
  /// "elmarad"
  String get substitutionMissed => "elmarad";
  /// "állapot"
  String get state => "állapot";
  /// "faliújság"
  String get note2 => "faliújság";
  /// "feljegyzés"
  String get note => "feljegyzés";
  /// "Feljegyzések"
  String get noteTitle => "Feljegyzések";
  /// "Üzenetek"
  String get messageTitle => "Üzenetek";
  /// "receivers"
  String get messageReceivers => "receivers";
  /// "statisztikák"
  String get statistics => "statisztikák";
  /// "Mulasztások"
  String get absenceTitle => "Mulasztások";
  /// "hiányzás ideje"
  String get absenceTime => "hiányzás ideje";
  /// "hiányzás módja"
  String get absenceMode => "hiányzás módja";
  /// "Összes hiányzás: ${count} óra"
  String absenceAll(String count) => "Összes hiányzás: ${count} óra";
  /// "Szülői igazolás: ${count} db"
  String absenceParental(String count) => "Szülői igazolás: ${count} db";
  /// "órarend"
  String get timetable => "órarend";
  /// "üres órarend"
  String get timetableEmpty => "üres órarend";
  /// "Rendezés"
  String get sort => "Rendezés";
  /// "beírás ideje"
  String get sortTime => "beírás ideje";
  /// "jegy"
  String get sortEval => "jegy";
  /// "számonkérés ideje"
  String get sortTimeReal => "számonkérés ideje";
  /// "Jegyek"
  String get evaluationTitle => "Jegyek";
  /// "átlag"
  String get evaluationAverage => "átlag";
  /// "osztály átlag"
  String get evaluationAverageClass => "osztály átlag";
  /// "faja"
  String get evaluationMode => "faja";
  /// "súly"
  String get evaluationWeight => "súly";
  /// "érték"
  String get evaluationValue => "érték";
  /// "mód"
  String get evaluationRange => "mód";
  /// "ha kapnék egy"
  String get evaluationIf => "ha kapnék egy";
  /// "bejelentkezés"
  String get login => "bejelentkezés";
  /// "Felhasználónév"
  String get loginUsername => "Felhasználónév";
  /// "Jelszó"
  String get loginPassword => "Jelszó";
  /// "11 jegyű, 7-tel kezdődő diákigazolványszám"
  String get loginUsernameHint => "11 jegyű, 7-tel kezdődő diákigazolványszám";
  /// "általában a születési dátum (pl.: 2000-01-02)"
  String get loginPasswordHint => "általában a születési dátum (pl.: 2000-01-02)";
  /// "Kérlek add meg a felhasználónevedet!"
  String get loginUsernameError => "Kérlek add meg a felhasználónevedet!";
  /// "Kérlek add meg a jelszavadat!"
  String get loginPasswordError => "Kérlek add meg a jelszavadat!";
  /// "Kérlek válassz egy iskolát!"
  String get loginSchoolError => "Kérlek válassz egy iskolát!";
  /// "Iskola"
  String get loginSchool => "Iskola";
  /// "válassz"
  String get loginChoose => "válassz";
  /// "Válassz iskolát"
  String get loginChooseSchool => "Válassz iskolát";
  /// "Exportálás"
  String get export => "Exportálás";
  /// "jegyek"
  String get exportGrades => "jegyek";
  /// "órák"
  String get exportLessons => "órák";
  /// "fiókok"
  String get exportAccounts => "fiókok";
  /// "válassz intervallumot"
  String get exportChoose => "válassz intervallumot";
  /// "sikeresen exportálva"
  String get exportSuccess => "sikeresen exportálva";
  /// "Alkalmazás bezárása"
  String get closeTitle => "Alkalmazás bezárása";
  /// "Biztosan be akarod zárni az alkalmazást?"
  String get closeConfirm => "Biztosan be akarod zárni az alkalmazást?";
  /// "Születési dátum: "
  String get infoBirthdate => "Születési dátum: ";
  /// "Kréta azonosító: "
  String get infoKretaID => "Kréta azonosító: ";
  /// "Lakcím: "
  String get infoAddress => "Lakcím: ";
  /// "Osztályfőnök: "
  String get infoTeacher => "Osztályfőnök: ";
  /// "Iskola: "
  String get infoSchool => "Iskola: ";
  /// "Szülők: "
  String get infoParents => "Szülők: ";
  /// "Anyja neve: "
  String get infoMother => "Anyja neve: ";
  /// "szín"
  String get color => "szín";
  /// "zöld"
  String get colorGreen => "zöld";
  /// "piros"
  String get colorRed => "piros";
  /// "kék"
  String get colorBlue => "kék";
  /// "lime"
  String get colorLime => "lime";
  /// "sárga"
  String get colorYellow => "sárga";
  /// "narancs"
  String get colorOrange => "narancs";
  /// "szürke"
  String get colorGrey => "szürke";
  /// "rózsaszín"
  String get colorPink => "rózsaszín";
  /// "lila"
  String get colorPurple => "lila";
  /// "kékeszöld"
  String get colorTeal => "kékeszöld";
  /// "Beállítások"
  String get settingsTitle => "Beállítások";
  /// "Színes főoldal"
  String get settingsColorful => "Színes főoldal";
  /// "Sötét üzemmód"
  String get settingsDarkTheme => "Sötét üzemmód";
  /// "Amoled"
  String get settingsAmoled => "Amoled";
  /// "Jegyek színe"
  String get settingsEvaluationColors => "Jegyek színe";
  /// "Értesítések"
  String get settingsNotifications => "Értesítések";
  /// "Következő óra"
  String get settingsNextLesson => "Következő óra";
  /// "Szinkronizálás gyakorisága: ${n}"
  String settingsSyncFrequency(String n) => "Szinkronizálás gyakorisága: ${n}";
  /// "Nyelv"
  String get settingsLanguage => "Nyelv";
  /// "Nem sikerült bekapcsolni az értesítéseket"
  String get notificationFailed => "Nem sikerült bekapcsolni az értesítéseket";
  /// "Siker"
  String get success => "Siker";
}

class _I18n_hu_HU extends I18n {
  const _I18n_hu_HU();

  @override
  TextDirection get textDirection => TextDirection.ltr;
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<WidgetsLocalizations> {
  const GeneratedLocalizationsDelegate();
  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("hu", "HU")
    ];
  }

  LocaleResolutionCallback resolution({Locale fallback}) {
    return (Locale locale, Iterable<Locale> supported) {
      if (isSupported(locale)) {
        return locale;
      }
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    };
  }

  @override
  Future<WidgetsLocalizations> load(Locale locale) {
    I18n._locale ??= locale;
    I18n._shouldReload = false;
    final String lang = I18n._locale != null ? I18n._locale.toString() : "";
    final String languageCode = I18n._locale != null ? I18n._locale.languageCode : "";
    if ("hu_HU" == lang) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_hu_HU());
    }
    else if ("hu" == languageCode) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_hu_HU());
    }

    return SynchronousFuture<WidgetsLocalizations>(const I18n());
  }

  @override
  bool isSupported(Locale locale) {
    for (var i = 0; i < supportedLocales.length && locale != null; i++) {
      final l = supportedLocales[i];
      if (l.languageCode == locale.languageCode) {
        return true;
      }
    }
    return false;
  }

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => I18n._shouldReload;
}